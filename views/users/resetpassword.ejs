<% layout("ppulayouts/ppuboilerplate") %>

  <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }
        button {
            background: #007BFF;
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
        }
        .error {
            color: red;
            font-size: 14px;
        }
        .success {
            color: green;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <h1>Change Password</h1>
    <form id="passwordForm">
        <div class="form-group">
            <label for="currentPassword">Current Password:</label>
            <input type="password" id="currentPassword" required>
        </div>
        <div class="form-group">
            <label for="newPassword">New Password:</label>
            <input type="password" id="newPassword" required>
            <small>(Min 8 chars, 1 number, 1 special char)</small>
        </div>
        <div class="form-group">
            <label for="confirmPassword">Confirm Password:</label>
            <input type="password" id="confirmPassword" required>
        </div>
        <button type="submit">Change Password</button>
        <div id="message" class="message"></div>
    </form>

    <script>
        document.getElementById('passwordForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const currentPassword = document.getElementById('currentPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const messageDiv = document.getElementById('message');

            // Client-side validation
            if (newPassword !== confirmPassword) {
                messageDiv.textContent = "Passwords do not match!";
                messageDiv.className = 'error';
                return;
            }

            if (!isPasswordStrong(newPassword)) {
                messageDiv.textContent = "Password must be at least 8 chars with a number and special char!";
                messageDiv.className = 'error';
                return;
            }

            // Send to server
            try {
                const response = await fetch('/change-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ currentPassword, newPassword })
                });

                const data = await response.json();

                if (response.ok) {
                    messageDiv.textContent = data.message || "Password changed successfully!";
                    messageDiv.className = 'success';
                } else {
                    messageDiv.textContent = data.error || "Failed to change password.";
                    messageDiv.className = 'error';
                }
            } catch (err) {
                messageDiv.textContent = "Network error. Try again.";
                messageDiv.className = 'error';
            }
        });

        function isPasswordStrong(password) {
            const regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;
            return regex.test(password);
        }
    </script>