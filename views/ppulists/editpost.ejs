<% layout("ppulayouts/ppuboilerplate") %>
<div class="row mt-3">
    <div class="col-8 offset-2">
<h3>Edit Post</h3>
    <form method="POST" action="/ppulists/<%= ppulist._id %>?_method=PUT" novalidate class="needs-validation">
        <div class="mb-3">
            <label for="title" 
            class="form-label">Title</label>
        <input 
        name="ppulist[title]" 
        value="<%= ppulist.title %>" 
        type="text" 
        class="form-control" 
        required>
        <div class="invalid-feedback">Please Enter #Notice</div>
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea 
              id="description"
              name="ppulist[description]" 
              class="form-control <%= typeof errors !== 'undefined' && errors.find(e => e.path === 'description') ? 'is-invalid' : '' %>"
              rows="5"
              placeholder="Enter notice description here..."
              required
            ><%= ppulist.description ? ppulist.description.trim() : '' %></textarea>
            <div class="invalid-feedback">
              <%= typeof errors !== 'undefined' && errors.find(e => e.path === 'description') ? 
                  errors.find(e => e.path === 'description').msg : 'Please enter a valid notice description' %>
            </div>
          </div>

<div class="mb-3">
    <label for="image" class="form-label">Notice Photo</label>
    <input 
    name="ppulist[image]" 
    value="<%= ppulist.image.url ? ppulist.image.url : ppulist.image %>" 
    class="form-control" 
    type="text">
</div>

<div class="row">
    <div class="mb-3 col-md-5">
    <label for="postedBy" class="form-label">Posted Name</label>
 <input 
    name="ppulist[postedBy]" 
    value="<%= ppulist.postedBy %>" 
    class="form-control" 
    required 
    type="text">
    <div class="invalid-feedback">Enter Admin Name</div>

  </div>

  <!-- <div class="mb-3 col-md-4">
    <label for="time" class="form-label">Time & Data</label>
    <input name="ppulist[time]" 
    value=" 
    class="form-control" 
    type="datetime-local">
   

  </div> -->
  <!-- <div class="mb-3 col-md-4">
    <label for="time" class="form-label">Time & Date</label>
    <input 
        id="time"
        name="ppulist[time]" 
        placeholder="Enter date and time" 
        class="form-control" 
        required 
        type="datetime-local"
        max=""
    >
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const timeInput = document.getElementById('time');
    
    // Function to set maximum datetime to current time
    function updateMaxDateTime() {
        const now = new Date();
        // Convert to local datetime string (YYYY-MM-DDTHH:MM)
        const localISOTime = new Date(now.getTime() - now.getTimezoneOffset() * 60000)
                            .toISOString()
                            .slice(0, 16);
        timeInput.max = localISOTime;
    }

    // Initial update on page load
    updateMaxDateTime();

    // Update when input is focused
    timeInput.addEventListener('focus', updateMaxDateTime);
    
    // Update every minute to keep current
    setInterval(updateMaxDateTime, 60000);
});
</script> -->

<div class="mb-3 col-md-6">
    <label for="time" class="form-label">Time & Date</label>
    <div class="input-group">
        <input 
            id="time"
            name="ppulist[time]" 
            class="form-control" 
            required 
            type="datetime-local"
            max=""
        >
        <button class="btn btn-outline-secondary modern" type="button" id="setCurrentTime">
            <i class="bi bi-clock"></i> Now
          </button>
        <!-- <button class="btn btn-primary" type="button" id="confirmDateTime">
            <i class="bi bi-check"></i> OK
        </button> -->
    </div>
    <div class="mt-2 text-muted" id="timeDisplay"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const timeInput = document.getElementById('time');
    const setCurrentBtn = document.getElementById('setCurrentTime');
    const confirmBtn = document.getElementById('confirmDateTime');
    const timeDisplay = document.getElementById('timeDisplay');
    
    // Function to get current datetime in correct format
    function getCurrentDateTime() {
        const now = new Date();
        return new Date(now.getTime() - now.getTimezoneOffset() * 60000)
               .toISOString()
               .slice(0, 16);
    }

    // Function to format datetime for display
    function formatDisplayDateTime(isoString) {
        const options = { 
            year: 'numeric', 
            month: 'short', 
            day: 'numeric',
            hour: '2-digit', 
            minute: '2-digit',
            hour12: true
        };
        return new Date(isoString).toLocaleString(undefined, options);
    }

    // Update both value and max attributes
    function updateDateTimeControls() {
        const currentDateTime = getCurrentDateTime();
        timeInput.max = currentDateTime;
        timeDisplay.textContent = `Current: ${formatDisplayDateTime(currentDateTime)}`;
        return currentDateTime;
    }

    // Set to current time
    function setToCurrentTime() {
        timeInput.value = updateDateTimeControls();
        updateTimeDisplay();
    }

    // Update the display below the input
    function updateTimeDisplay() {
        if (timeInput.value) {
            timeDisplay.textContent = `Selected: ${formatDisplayDateTime(timeInput.value)}`;
        }
    }

    // Initial setup
    setToCurrentTime(); // Set to current time by default
    
    // Event listeners
    timeInput.addEventListener('change', updateTimeDisplay);
    setCurrentBtn.addEventListener('click', setToCurrentTime);
    confirmBtn.addEventListener('click', function() {
        if (!timeInput.value) {
            alert('Please select a date and time first');
            return;
        }
        alert(`Time confirmed: ${formatDisplayDateTime(timeInput.value)}`);
        // Add your confirmation logic here
    });
    
    // Update every minute to keep current
    setInterval(updateDateTimeControls, 60000);
});
</script>

<!-- Bootstrap Icons (add this in your head tag if not already included) -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">



</div>
       <button class="btn btn-warning">Update Post</button>
</form>
</div>
</div>
<script src="/js/script.js"></script>
    

