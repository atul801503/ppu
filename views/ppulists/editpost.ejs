<% layout("ppulayouts/ppuboilerplate") %>
<div class="row mt-3">
    <div class="col-8 offset-2">
        <h3>Edit Post</h3>
<<<<<<< HEAD
        <form method="POST" 
        action="/ppulists/<%= ppulist._id %>?_method=PUT" e
        nctype="multipart/form-data" 
        novalidate 
        class="needs-validation">
=======
        <form method="POST" action="/ppulists/<%= ppulist._id %>?_method=PUT" enctype="multipart/form-data" novalidate class="needs-validation">
>>>>>>> 27c6495275a2fed8f0bceb4354b7d87bf74d43f3
            <div class="mb-3">
                <label for="title" class="form-label">Title</label>
                <input
                    name="ppulist[title]"
                    value="<%= ppulist.title %>"
                    type="text"
                    class="form-control"
                    required>
                <div class="invalid-feedback">Please Enter #Notice</div>
            </div>

            <div class="mb-3">
                <label for="description" class="form-label">Description</label>
                <textarea
                    id="description"
                    name="ppulist[description]"
                    class="form-control <%= typeof errors !== 'undefined' && errors.find(e => e.path === 'description') ? 'is-invalid' : '' %>"
                    rows="5"
                    placeholder="Enter notice description here..."
                    required
                ><%= ppulist.description ? ppulist.description.trim() : '' %></textarea>
                <div class="invalid-feedback">
                    <%= typeof errors !== 'undefined' && errors.find(e => e.path === 'description') ?
                        errors.find(e => e.path === 'description').msg : 'Please enter a valid notice description' %>
                </div>
            </div>

           <div class="mb-3">
    <label for="file-upload" class="form-label">Upload Notice (Photo or PDF)</label>
    <input
        name="ppulist[file]"
        id="file-upload"
        class="form-control"
        type="file"
        accept=".jpg,.jpeg,.png,.gif,.pdf"
    >
    <% if (ppulist.image || ppulist.file) { %>
        <div class="mt-2">
            <small class="text-muted">Current file:</small>
            <% if (ppulist.image && ppulist.image.url && ppulist.image.url.match(/\.(jpg|jpeg|png|gif)$/i)) { %>
                <img src="<%= ppulist.image.url %>" class="img-thumbnail mt-2" style="max-height: 150px;">
            <% } else if (ppulist.file && ppulist.file.match(/\.pdf$/i)) { %>
                <div class="mt-2">
                    <i class="bi bi-file-earmark-pdf fs-1 text-danger"></i>
                    <span class="ms-2">PDF Document</span>
                </div>
            <% } else if (ppulist.image) { %>
                <img src="<%= ppulist.image.url ? ppulist.image.url : ppulist.image %>" class="img-thumbnail mt-2" style="max-height: 150px;">
            <% } %>
            <div class="form-check mt-2">
                <input class="form-check-input" type="checkbox" name="ppulist[removeFile]" id="remove-file" value="on">
                <label class="form-check-label text-danger" for="remove-file">
                    Remove current file
                </label>
            </div>
        </div>
    <% } %>
</div>

            <div class="row">
                <div class="mb-3 col-md-5">
                    <label for="postedBy" class="form-label">Posted Name</label>
                    <input
                        name="ppulist[postedBy]"
                        value="<%= ppulist.postedBy %>"
                        class="form-control"
                        required
                        type="text">
                    <div class="invalid-feedback">Enter Admin Name</div>
                </div>

                <div class="mb-3 col-md-6">
                    <label for="time" class="form-label">Time & Date</label>
                    <div class="input-group">
                        <input
                            id="time"
                            name="ppulist[time]"
                            value="<%= ppulist.time ? new Date(ppulist.time).toISOString().slice(0,16) : '' %>"
                            class="form-control"
                            required
                            type="datetime-local"
                            max="">
                        <button class="btn btn-outline-secondary modern" type="button" id="setCurrentTime">
                            <i class="bi bi-clock"></i> Now
                        </button>
                    </div>
                    <div class="mt-2 text-muted" id="timeDisplay"></div>
                </div>
            </div>

            <button class="btn btn-warning">Update Post</button>
        </form>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const timeInput = document.getElementById('time');
    const setCurrentBtn = document.getElementById('setCurrentTime');
    const timeDisplay = document.getElementById('timeDisplay');

    // Function to get current datetime in correct format
    function getCurrentDateTime() {
        const now = new Date();
        return new Date(now.getTime() - now.getTimezoneOffset() * 60000)
               .toISOString()
               .slice(0, 16);
    }

    // Function to format datetime for display
    function formatDisplayDateTime(isoString) {
        const options = {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            hour12: true
        };
        return new Date(isoString).toLocaleString(undefined, options);
    }

    // Update both value and max attributes
    function updateDateTimeControls() {
        const currentDateTime = getCurrentDateTime();
        timeInput.max = currentDateTime;
        timeDisplay.textContent = `Current: ${formatDisplayDateTime(currentDateTime)}`;
        return currentDateTime;
    }

    // Set to current time
    function setToCurrentTime() {
        timeInput.value = updateDateTimeControls();
        updateTimeDisplay();
    }

    // Update the display below the input
    function updateTimeDisplay() {
        if (timeInput.value) {
            timeDisplay.textContent = `Selected: ${formatDisplayDateTime(timeInput.value)}`;
        } else if (timeInput.defaultValue) {
            timeDisplay.textContent = `Current: ${formatDisplayDateTime(timeInput.defaultValue)}`;
        }
    }

    // Initial setup
    updateDateTimeControls();
    updateTimeDisplay();

    // Event listeners
    timeInput.addEventListener('change', updateTimeDisplay);
    setCurrentBtn.addEventListener('click', setToCurrentTime);

    // Update every minute to keep current
    setInterval(updateDateTimeControls, 60000);
});
</script>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">
<script src="/js/script.js"></script>